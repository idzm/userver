# yaml
components_manager:
    components:
        # The required common components
        logging:
            fs-task-processor: fs-task-processor
            loggers: {}

        # Creates gRPC clients
        grpc-client-factory:
            # The TaskProcessor for blocking connection initiation
            task-processor: grpc-blocking-task-processor

            # Optional channel parameters for gRPC Core
            # https://grpc.github.io/grpc/core/group__grpc__arg__keys.html
            channel-args: {}

# /// [otlp logger]
        otlp-logger:
            endpoint: '0.0.0.0:4317'
            service-name: otlp-example
            log-level: debug
            # How to rename attributes, if you really need to
            attributes-mapping:
                module: line
# /// [otlp logger]

        handler-server-monitor:
            path: /metrics
            method: GET
            task_processor: main-task-processor
            format: prometheus
        handler-ping:
            path: /ping
            method: GET
            task_processor: main-task-processor
            throttling_enabled: false
            url_trailing_slash: strict-match

        server:
            listener:
                port: 8092
                task_processor: main-task-processor
            listener-monitor:
                port: 8093
                task_processor: main-task-processor

        testsuite-support:

    default_task_processor: main-task-processor  # Task processor in which components start.

    task_processors:
        grpc-blocking-task-processor:  # For blocking gRPC channel creation
            worker_threads: 2
            thread_name: grpc-worker
        main-task-processor:           # For non-blocking operations
            worker_threads: 8
        fs-task-processor:             # For blocking filesystem operations
            worker_threads: 2
